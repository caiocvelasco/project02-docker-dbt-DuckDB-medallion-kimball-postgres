# Here, we include connection details for our database environments
duckdb_profile:
  
  target: duckdb # Set DuckDB as the default target
  
  outputs:
    duckdb:
      type: duckdb
      path: ../databases/dev.duckdb
      threads: 3
      attach:
        - path: "postgresql://{{ env_var('POSTGRES_USER') }}:{{ env_var('POSTGRES_PASSWORD') }}@{{ env_var('POSTGRES_HOST') }}:{{ env_var('POSTGRES_PORT') | as_number }}/{{ env_var('POSTGRES_DB') }}"
          alias: postgres
          type: postgres
        # - path: "dbname={{ env_var('POSTGRES_DB') }} user={{ env_var('POSTGRES_USER') }} host={{ env_var('POSTGRES_HOST') }} port={{ env_var('POSTGRES_PORT') | as_number }} password={{ env_var('POSTGRES_PASSWORD') }}"
        #   alias: postgres
        #   type: postgres    
      # extensions:
      #   - httpfs
      #   - parquet
      # settings:
      #   s3_region: us-east-1
      #   s3_access_key_id: "{{ env_var('S3_ACCESS_KEY_ID') }}"
      #   s3_secret_access_key: "{{ env_var('S3_SECRET_ACCESS_KEY') }}"    

    # postgres:
    #   type: postgres
    #   host:     "{{ env_var('POSTGRES_HOST') }}"
    #   user:     "{{ env_var('POSTGRES_USER') }}"
    #   password: "{{ env_var('POSTGRES_PASSWORD') }}"
    #   dbname:   "{{ env_var('POSTGRES_DB') }}"
    #   schema:   "public" # this is where the source tables will be, unless otherwise specified in a 'models > sources.yml' file
    #   port:     "{{ env_var('POSTGRES_PORT') | as_number }}" # adding the 'as_number' filter to avoid a dbt debug integer error ("Credentials in profile "my_dbt_profile", target "dev" invalid: '5432' is not of type 'integer'").
    #   threads: 4

#     prod: # for now, we only have the database above, but I will let it here
#       type: postgres
#       host: [host]
#       user: [prod_user]
#       password: [prod_password]
#       dbname: [dbname]
#       schema: [prod_schema]
#       port: [port]
#       threads: [1 or more]


# For reference: https://docs.getdbt.com/reference/dbt-jinja-functions/env_var